@{
    ViewData["Title"] = "Hoàn tất thiết lập";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Hoặc một layout trống nếu bạn muốn
}

<style>
    /* CSS để làm cho giao diện đẹp hơn */
    .onboarding-container {
        max-width: 700px;
        margin: 2rem auto;
        padding: 2rem;
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .progress-bar {
        display: flex;
        justify-content: space-between;
        margin-bottom: 2rem;
    }

    .progress-step {
        text-align: center;
        flex: 1;
        position: relative;
    }

    .progress-step .step-circle {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background-color: #ccc;
        color: white;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        border: 2px solid #ccc;
        transition: background-color 0.3s, border-color 0.3s;
    }

    .progress-step.active .step-circle {
        background-color: #007bff;
        border-color: #007bff;
    }

    .progress-step.completed .step-circle {
        background-color: #28a745;
        border-color: #28a745;
    }

    .progress-step .step-label {
        margin-top: 0.5rem;
        font-size: 0.9rem;
        color: #6c757d;
    }
    .progress-step.active .step-label {
        font-weight: bold;
        color: #000;
    }

    .step-content {
        display: none; /* Mặc định ẩn tất cả các bước */
    }

    .step-content.active {
        display: block; /* Hiển thị bước hiện tại */
    }

    .interest-tags {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .interest-tag {
        padding: 8px 15px;
        border: 1px solid #ccc;
        border-radius: 20px;
        cursor: pointer;
        transition: background-color 0.2s, color 0.2s;
    }

    .interest-tag.selected {
        background-color: #007bff;
        color: white;
        border-color: #007bff;
    }

    .navigation-buttons {
        margin-top: 2rem;
        display: flex;
        justify-content: space-between;
    }

    #error-message {
        display: none;
    }

</style>

<div class="onboarding-container">
    <h2 class="text-center">Chào mừng bạn!</h2>
    <p class="text-center text-muted">Hãy dành vài phút để cá nhân hóa trải nghiệm của bạn.</p>

    <!-- Thanh tiến trình -->
    <div class="progress-bar">
        <div class="progress-step" data-step="0">
            <div class="step-circle">1</div>
            <div class="step-label">Giới thiệu</div>
        </div>
        <div class="progress-step" data-step="1">
            <div class="step-circle">2</div>
            <div class="step-label">Sở thích</div>
        </div>
        <div class="progress-step" data-step="2">
            <div class="step-circle">3</div>
            <div class="step-label">Hồ sơ</div>
        </div>
        <div class="progress-step" data-step="3">
            <div class="step-circle">4</div>
            <div class="step-label">Hoàn tất</div>
        </div>
    </div>

    <hr />

    <!-- Khu vực hiển thị lỗi -->
    <div id="error-message" class="alert alert-danger"></div>

    <!-- Nội dung các bước -->
    <div id="step-container">
        <!-- Step 0: Intro -->
        <div id="step-0" class="step-content">
            <h4>Bắt đầu hành trình của bạn</h4>
            <p>Chúng tôi sẽ hướng dẫn bạn qua một vài bước nhanh chóng để thiết lập tài khoản.</p>
        </div>

        <!-- Step 1: Select Interests -->
        <div id="step-1" class="step-content">
            <h4>Bạn quan tâm đến điều gì?</h4>
            <p>Chọn ít nhất 3 chủ đề bạn yêu thích.</p>
            <div class="interest-tags">
                <!-- Các sở thích này có thể được tải động từ API -->
                <span class="interest-tag" data-value="Thời trang nam">Thời trang nam</span>
                <span class="interest-tag" data-value="Thời trang nữ">Thời trang nữ</span>
                <span class="interest-tag" data-value="Công nghệ">Công nghệ</span>
                <span class="interest-tag" data-value="Nhà cửa & Đời sống">Nhà cửa & Đời sống</span>
                <span class="interest-tag" data-value="Sách">Sách</span>
                <span class="interest-tag" data-value="Thể thao">Thể thao</span>
                <span class="interest-tag" data-value="Làm đẹp">Làm đẹp</span>
            </div>
        </div>

        <!-- Step 2: Setup Profile -->
        <div id="step-2" class="step-content">
            <h4>Thiết lập hồ sơ của bạn</h4>
            <div class="form-group">
                <label for="accountName">Tên hiển thị</label>
                <input type="text" id="accountName" class="form-control" placeholder="Ví dụ: John Doe">
            </div>
            <!-- Trong tương lai có thể thêm upload ảnh ở đây -->
        </div>

        <!-- Step 3: Confirm -->
        <div id="step-3" class="step-content">
            <h4>Xác nhận và Hoàn tất</h4>
            <p>Chúc mừng! Bạn đã sẵn sàng để khám phá. Nhấn "Hoàn thành" để bắt đầu.</p>
            <div class="text-center">
                <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="currentColor" class="bi bi-check-circle-fill text-success" viewBox="0 0 16 16">
                    <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
                </svg>
            </div>
        </div>
    </div>

    <!-- Nút điều hướng -->
    <div class="navigation-buttons">
        <button id="prev-btn" class="btn btn-secondary">Quay lại</button>
        <button id="next-btn" class="btn btn-primary">Tiếp theo</button>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // === STATE MANAGEMENT ===
            let currentStep = 0;
            const totalSteps = 4;
            let onboardingData = {
                accountName: '',
                selectedInterests: []
            };

            // === DOM ELEMENTS ===
            const prevBtn = document.getElementById('prev-btn');
            const nextBtn = document.getElementById('next-btn');
            const stepContents = document.querySelectorAll('.step-content');
            const progressSteps = document.querySelectorAll('.progress-step');
            const errorDiv = document.getElementById('error-message');

            // === INITIALIZATION ===
            async function initialize() {
                try {
                    const response = await fetch('/Onboarding/GetData');
                    if (!response.ok) {
                        throw new Error('Không thể tải dữ liệu ban đầu.');
                    }
                    const result = await response.json();

                    // Cập nhật state với dữ liệu đã lưu
                    onboardingData = result;

                    // Pre-fill form fields
                    if (onboardingData.accountName) {
                        document.getElementById('accountName').value = onboardingData.accountName;
                    }
                    if (onboardingData.selectedInterests && onboardingData.selectedInterests.length > 0) {
                        document.querySelectorAll('.interest-tag').forEach(tag => {
                            if (onboardingData.selectedInterests.includes(tag.dataset.value)) {
                                tag.classList.add('selected');
                            }
                        });
                    }

                    // TODO: Nên có một endpoint để lấy bước hiện tại, ví dụ /api/onboarding/current-step
                    // Giả sử chúng ta bắt đầu từ bước chưa hoàn thành đầu tiên.
                    // For demonstration, we'll start at step 0 and let the user click through.
                    // A more robust solution would fetch the current step from the server.
                    showStep(0);

                } catch (error) {
                    showError(error.message);
                }
            }

            // === UI FUNCTIONS ===
            function showStep(stepIndex) {
                currentStep = stepIndex;

                stepContents.forEach((step, index) => {
                    step.classList.toggle('active', index === stepIndex);
                });

                updateProgressBar();
                updateNavigationButtons();
            }

            function updateProgressBar() {
                progressSteps.forEach((step, index) => {
                    const stepCircle = step.querySelector('.step-circle');
                    if (index < currentStep) {
                        step.classList.add('completed');
                        step.classList.remove('active');
                        stepCircle.innerHTML = '✓'; // Checkmark
                    } else if (index === currentStep) {
                        step.classList.add('active');
                        step.classList.remove('completed');
                        stepCircle.innerText = index + 1;
                    } else {
                        step.classList.remove('active', 'completed');
                        stepCircle.innerText = index + 1;
                    }
                });
            }

            function updateNavigationButtons() {
                prevBtn.style.display = currentStep > 0 ? 'inline-block' : 'none';
                if (currentStep === totalSteps - 1) { // Bước cuối cùng (Confirm)
                    nextBtn.innerText = 'Hoàn thành';
                } else {
                    nextBtn.innerText = 'Tiếp theo';
                }
            }

            function showError(message) {
                errorDiv.innerText = message;
                errorDiv.style.display = 'block';
            }

            function hideError() {
                errorDiv.style.display = 'none';
            }


            // === DATA & API FUNCTIONS ===
            function collectDataFromCurrentStep() {
                 switch (currentStep) {
                    case 1: // Select Interests
                        onboardingData.selectedInterests = Array.from(document.querySelectorAll('.interest-tag.selected'))
                                                                .map(tag => tag.dataset.value);
                        break;
                    case 2: // Setup Profile
                        onboardingData.accountName = document.getElementById('accountName').value;
                        break;
                }
            }

            async function saveAndProceed() {
                hideError();
                collectDataFromCurrentStep();

                // Validate data
                if (currentStep === 1 && onboardingData.selectedInterests.length < 3) {
                     showError('Vui lòng chọn ít nhất 3 sở thích.');
                     return;
                }
                if (currentStep === 2 && !onboardingData.accountName.trim()) {
                    showError('Tên hiển thị không được để trống.');
                    return;
                }

                const requestPayload = {
                    currentStep: currentStep, // OnboardingStep enum value
                    accountName: onboardingData.accountName || "",
                    selectedInterests: onboardingData.selectedInterests || []
                };

                try {
                    const response = await fetch('/Onboarding/Update', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(requestPayload)
                    });

                    const result = await response.json();

                    if (!response.ok || (result && result.success === false)) {
                        throw new Error(result.message || 'Có lỗi xảy ra khi cập nhật.');
                    }

                    // Nếu thành công, chuyển bước tiếp theo
                    if (currentStep < totalSteps - 1) {
                        showStep(currentStep + 1);
                    } else {
                        // Bước cuối cùng, chuyển hướng về trang chủ
                        window.location.href = '/Home/Index';
                    }

                } catch (error) {
                    showError(error.message);
                }
            }

            // === EVENT LISTENERS ===
            nextBtn.addEventListener('click', saveAndProceed);

            prevBtn.addEventListener('click', () => {
                if (currentStep > 0) {
                    showStep(currentStep - 1);
                }
            });

            document.querySelectorAll('.interest-tag').forEach(tag => {
                tag.addEventListener('click', () => {
                    tag.classList.toggle('selected');
                });
            });

            // === START THE APP ===
            initialize();
        });
    </script>
}